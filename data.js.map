{"version":3,"sources":["data.es6.js"],"names":[],"mappings":";;;;;;;;;;;QAAa,IAAI,GACF,SADF,IAAI,CACD,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;8BAD1B,IAAI;;AAET,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;YALQ,IAAI,GAAJ,IAAI;;QAQJ,KAAK;AACH,iBADF,KAAK,CACF,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE;kCAD7B,KAAK;;AAEV,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;;qBALQ,KAAK;;mBAOH,qBAAC,GAAG,EAAE;AACb,oBAAI,GAAG,KAAK,SAAS,EAAE;AACnB,uBAAG,GAAG,EAAE,CAAC;iBACZ;AACD,oBAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC/B,uBAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB,CAAC,CAAC;AACH,oBAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;AACtC,yBAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBAC1B,CAAC,CAAC;AACH,uBAAO,GAAG,CAAC;aAEd;;;mBAEO,oBAAG;AACP,oBAAI,OAAO,GAAG;AACV,0BAAM,EAAE,CAAC;AACT,0BAAM,EAAE,CAAC;AACT,2BAAO,EAAE,CAAC;iBACb,CAAC;;AAEF,oBAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAClC,wBAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC7B,wBAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;AACzB,+BAAO,CAAC,MAAM,EAAE,CAAC;qBACpB,MACI;AACD,+BAAO,CAAC,MAAM,EAAE,CAAC;qBACpB;AACD,2BAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;iBAEnC,CAAC,CAAC;;AAEH,uBAAO,OAAO,CAAC;aAClB;;;eAzCQ,KAAK;;;YAAL,KAAK,GAAL,KAAK;;AA6ClB,QAAI,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AACxC,QAAI,GAAG,GAAG,IAAI,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AACnD,QAAI,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;;AAExC,QAAI,MAAM,GAAG,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAClD,QAAI,MAAM,GAAG,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,QAAI,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;;AAE5C,QAAI,QAAQ,GAAG,IAAI,CAAC;YAAhB,QAAQ,GAAR,QAAQ","file":"data.js","sourcesContent":["export class Test {\r\n    constructor(name, status, runtime) {\r\n        this.name = name;\r\n        this.status = status;\r\n        this.runtime = runtime;\r\n    }\r\n}\r\n\r\nexport class Suite {\r\n    constructor(name, childSuites, tests) {\r\n        this.name = name;\r\n        this.childSuites = childSuites;\r\n        this.tests = tests;\r\n    }\r\n\r\n    getAllTests(arr) {\r\n        if (arr === undefined) {\r\n            arr = [];\r\n        }\r\n        this.tests.forEach(function (test) {\r\n            arr.push(test);\r\n        });\r\n        this.childSuites.forEach(function (child) {\r\n            child.getAllTests(arr);\r\n        });\r\n        return arr;\r\n\r\n    }\r\n\r\n    getTotal() {\r\n        var summary = {\r\n            passed: 0,\r\n            failed: 0,\r\n            runtime: 0\r\n        };\r\n\r\n        var allTests = this.getAllTests();\r\n        allTests.forEach(function (test) {\r\n            if (test.status != \"passed\") {\r\n                summary.failed++;\r\n            }\r\n            else {\r\n                summary.passed++;\r\n            }\r\n            summary.runtime += test.runtime;\r\n\r\n        });\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\n\r\nvar foo = new Test(\"foo\", \"passed\", 42);\r\nvar bar = new Test(\"bar goes wrong\", \"failed\", 42);\r\nvar baz = new Test(\"baz\", \"passed\", 42);\r\n\r\nvar groupA = new Suite(\"group a\", [], [foo, bar]);\r\nvar groupB = new Suite(\"group b\", [], [baz]);\r\nvar root = new Suite(\"root\", [groupA, groupB], []);\r\n\r\nexport var demoData = root;"]}