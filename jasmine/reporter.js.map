{"version":3,"sources":["reporter.es6.js"],"names":[],"mappings":";;;;;;;;;;;;;;;QAGqB,cAAc;AACpB,iBADM,cAAc,GACjB;kCADG,cAAc;;AAE3B,uCAFa,cAAc,6CAEnB;AACR,mBAAO,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC;AACzB,wBAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,2BAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,4BAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C,yBAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AACtC,2BAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;aAC7C,CAAC,CAAC;;AAEH,gBAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;;AAElB,gBAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;SACtB;;kBAdgB,cAAc;;qBAAd,cAAc;;mBAiBlB,yBAAG;AACZ,oBAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;aAC/B;;;mBAES,oBAAC,OAAO,EAAE;AAChB,oBAAI,OAAO,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1C,oBAAI,IAAI,GAAG,UAzBX,IAAI,CAyBgB,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAClE,oBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC3B,oBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChD;;;mBAEa,0BAAG;AACb,oBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpB,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACxB;;;mBAEU,qBAAC,OAAO,EAAE;AACjB,oBAAG,OAAO,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAC;AACrC,wBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UArCzC,IAAI,CAqC8C,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC3E;AACD,oBAAI,KAAK,GAAG,UAvCN,KAAK,CAuCW,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;AAChF,oBAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC7B,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnD;;;mBAEY,yBAAE;AACX,oBAAI,WAAW,GAAG,UA7CZ,KAAK,CA6CiB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;AACrE,oBAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;aACpC;;;eA7CgB,cAAc;;;qBAAd,cAAc","file":"reporter.js","sourcesContent":["import EventEmitter from \"../eventemitter\"\r\nimport {Test, Suite} from \"../data\"\r\n\r\nexport default class JasmineAdapter extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n        jasmine.getEnv().addReporter({\r\n            specDone: this.onSpecDone.bind(this),\r\n            specStarted: this.onSpecStarted.bind(this),\r\n            suiteStarted: this.onSuiteStarted.bind(this),\r\n            suiteDone: this.onSuiteDone.bind(this),\r\n            jasmineDone: this.onJasmineDone.bind(this)\r\n        });\r\n        // a stack of test arrays. The top element on the stack is the currently active suite\r\n        this.tests = [[]];\r\n        // a stack of suite arrays\r\n        this.suites = [[]];\r\n    }\r\n\r\n\r\n    onSpecStarted() {\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onSpecDone(details) {\r\n        var runtime = new Date() - this.startTime;\r\n        var test = new Test(details.description, details.status, runtime);\r\n        this.emit(\"testEnd\", test);\r\n        this.tests[this.tests.length - 1].push(test);\r\n    }\r\n\r\n    onSuiteStarted() {\r\n        this.tests.push([]);\r\n        this.suites.push([]);\r\n    }\r\n\r\n    onSuiteDone(details) {\r\n        if(details.failedExpectations.length > 0){\r\n            this.tests[this.tests.length-1].push(new Test(\"afterAll\", \"failed\", 0));\r\n        }\r\n        var suite = new Suite(details.description, this.suites.pop(), this.tests.pop());\r\n        this.emit(\"suiteEnd\", suite);\r\n        this.suites[this.suites.length - 1].push(suite);\r\n    }\r\n\r\n    onJasmineDone(){\r\n        var globalSuite = new Suite(\"\", this.suites.pop(), this.tests.pop());\r\n        this.emit(\"runEnd\", globalSuite);\r\n    }\r\n\r\n}"]}