{"version":3,"sources":["reporter.es6.js"],"names":[],"mappings":";;;;;;;;;;;;;;;QAIqB,YAAY;AAClB,iBADM,YAAY,GACf;kCADG,YAAY;;AAEzB,uCAFa,YAAY,6CAEjB;AACR,iBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,iBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,iBAAK,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE/C,gBAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,gBAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;;kBATgB,YAAY;;qBAAZ,YAAY;;mBAWnB,oBAAC,OAAO,EAAE;AAChB,oBAAI,MAAM,CAAC;AACX,oBAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;AACrB,0BAAM,GAAG,QAAQ,CAAC;iBACrB,MACI;AACD,0BAAM,GAAG,QAAQ,CAAC;iBACrB;AACD,oBAAI,IAAI,GAAG,UAtBX,IAAI,CAsBgB,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3D,oBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtB,oBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAE9B;;;mBAEK,gBAAC,OAAO,EAAE;AACZ,oBAAI,WAAW,GAAG,UA7BZ,KAAK,CA6BiB,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjD,oBAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;aACpC;;;mBAEW,sBAAC,OAAO,EAAE;AAClB,oBAAI,KAAK,GAAG,UAlCN,KAAK,CAkCW,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACpD,oBAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,oBAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aAChC;;;eAnCgB,YAAY;;;qBAAZ,YAAY","file":"reporter.js","sourcesContent":["import EventEmitter from \"../eventemitter\"\r\nimport {Test, Suite} from \"../data\"\r\n\r\n\r\nexport default class QUnitAdapter extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n        QUnit.done(this.onDone.bind(this));\r\n        QUnit.testDone(this.onTestDone.bind(this));\r\n        QUnit.moduleDone(this.onModuleDone.bind(this));\r\n\r\n        this.tests = [];\r\n        this.suites = [];\r\n    }\r\n\r\n    onTestDone(details) {\r\n        var status;\r\n        if (details.failed != 0) {\r\n            status = \"failed\";\r\n        }\r\n        else {\r\n            status = \"passed\";\r\n        }\r\n        var test = new Test(details.name, status, details.runtime);\r\n        this.tests.push(test);\r\n        this.emit(\"testEnd\", test);\r\n\r\n    }\r\n\r\n    onDone(details) {\r\n        var globalSuite = new Suite(\"\", this.suites, []);\r\n        this.emit(\"runEnd\", globalSuite);\r\n    }\r\n\r\n    onModuleDone(details) {\r\n        var suite = new Suite(details.name, [], this.tests);\r\n        this.tests = [];\r\n        this.suites.push(suite);\r\n        this.emit(\"suiteEnd\", suite);\r\n    }\r\n}"]}